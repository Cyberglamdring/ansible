- name: Check if Service Exists
  stat: path=/etc/systemd/system/{{service_name}}
  register: service_status

- name: tomcat download
  get_url:
    url: "http://ftp.byfly.by/pub/apache.org/tomcat/{{ tomcat_version }}/v{{ tomcat_relase }}/bin/apache-tomcat-8.5.42.tar.gz"
    dest: "{{ home_dir }}/apache-tomcat-{{ tomcat_relase }}.tar.gz"
  when: service_status.stat.exists

- name: tomcat unarchive
  unarchive:
    src: "{{ home_dir }}/apache-tomcat-{{ tomcat_relase }}.tar.gz"
    dest: /opt/
    remote_src: yes
  when: service_status.stat.exists

- name: tomcat shell operation
  shell: |
    groupadd {{ tomcat_group }}
    useradd -g {{ tomcat_user }} -d {{ tomcat_home }} -s /bin/nologin tomcat
    chown -R {{ tomcat_user }}:{{ tomcat_group }} {{ tomcat_home }}

    export CATALINA_HOME={{ tomcat_home }}
  when: service_status.stat.exists

- name: tomcat web-user settings
  template:
    src: tomcat-users.xml
    dest: "{{ tomcat_home }}/conf/"
    backup: yes
  notify: restart apache tomcat
  when: service_status.stat.exists

- name: tomcat context.xml setup changes
  template:
    src: context.xml
    dest: "{{ tomcat_home }}/webapps/manager/META-INF/"
    backup: yes
  notify: restart apache tomcat
  when: service_status.stat.exists


- name: tomcat JAVA_OPTS
  shell: echo $JAVA_OPTS
  environment:
    JAVA_OPTS: "{{ tomcat_java_opts }}"
  notify: restart apache tomcat
  when: service_status.stat.exists

- name: tomcat servise create
  template:
    src: tomcat.service
    dest: /etc/systemd/system/
  when: service_status.stat.exists  
  become: yes

- name: tomcat service enable
  service:
    name: tomcat
    state: started
    enabled: yes
  when: service_status.stat.exists
  become: yes